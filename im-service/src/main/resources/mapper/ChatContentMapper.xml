<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eekj.health.im.mapper.ChatContentMapper">
  <resultMap id="BaseResultMap" type="com.eekj.health.im.entity.ChatContentEntity">
    <!--@mbg.generated generated on Thu Jul 09 09:45:19 CST 2020.-->
    <!--@Table chat_content-->
    <id column="chat_id" jdbcType="INTEGER" property="chatId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="sender_id" jdbcType="INTEGER" property="senderId" />
    <result column="sender_name" jdbcType="VARCHAR" property="senderName" />
    <result column="receive_id" jdbcType="INTEGER" property="receiveId" />
    <result column="receive_name" jdbcType="VARCHAR" property="receiveName" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="message_state" jdbcType="INTEGER" property="messageState" />
    <result column="room_id" jdbcType="VARCHAR" property="roomId" />
     <result column="message_type" jdbcType="INTEGER" property="messageType" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated generated on Thu Jul 09 09:45:19 CST 2020.-->
    chat_id, content , sender_id, sender_name,receive_id,receive_name,send_time, message_state, room_id, message_type
  </sql>

  <!--批量添加-->
  <insert id="addChatContentList" parameterType="java.util.List" useGeneratedKeys="true">
    insert into chat_content
    (content, sender , sender_id, sender_name, sender_phone, to_phone, send_time, message_state, roomId, message_type)
    values
    <foreach collection="list" item="item" index="index" separator=",">
        (
            #{item.content,jdbcType=VARCHAR},
            #{item.senderId,jdbcType=INTEGER},
            #{item.senderName,jdbcType=VARCHAR},
             #{item.receiveId,jdbcType=INTEGER},
            #{item.receiveName,jdbcType=VARCHAR},
            #{item.sendTime,jdbcType=TIMESTAMP},
            #{item.messageState,jdbcType=INTEGER},
            #{item.roomId,jdbcType=VARCHAR},
            #{item.messageType,jdbcType=INTEGER}
        )
    </foreach>
  </insert>

  <!--查询用户和专家之间的消息-->
  <select id="selectChatContentList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from chat_content
    where (sender_id = #{param1} and receive_id = #{param2})
    or (sender_id = #{param2} and receive_id = #{param1})
  </select>

  <!--查询未读的消息-->
  <select id="selectUnreadContentList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from chat_content
    where receive_id = #{userId}
    and message_state = 0
    order by send_time asc
  </select>

<!--修改消息状态-->
  <update id="updateMessageState" parameterType="list">
    update chat_content set message_state = 1
    where chat_id in
    <foreach collection="list" item="item" open="(" separator="," close= ")">
        #{item}
    </foreach>
  </update>

</mapper>